<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.2.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
         http://www.springframework.org/schema/jdbc
         http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
         http://www.springframework.org/schema/aop 
         http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
         http://www.springframework.org/schema/util
         http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	<!-- scans the classpath for annotated components (including @Repostory 
		and @Service that will be auto-registered as Spring beans -->
	<context:component-scan base-package="com.woodare.core.base" />
	<context:component-scan base-package="com.woodare.template.jpa" />
	
	<context:property-placeholder location="classpath*:*.properties" ignore-unresolvable="true" />
		
	<!-- use declarative transaction management -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- ================================== -->
	<!-- <context:property-placeholder location="classpath:system.properties" /> -->
      
    <!-- 动态dataSource -->  
    <bean id="dataSource" class="com.woodare.core.jpa.rws.RwDataSource">  
        <property name="targetDataSources">    
              <map key-type="java.lang.String">    
                 <!-- write -->  
                 <entry key="master" value-ref="masterDataSource"/>    
                 <!-- read -->  
                 <entry key="slave" value-ref="slaveDataSource"/>    
              </map>    
        </property>    
        <property name="defaultTargetDataSource" ref="masterDataSource"/>    
    </bean> 
    
	<bean id="masterDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
		<property name="driverClassName" value="${database.driverClassName}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
		<property name="maxActive" value="50" />
		<property name="maxIdle" value="50" />
		
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="1800000" />
		<property name="numTestsPerEvictionRun" value="3" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<property name="validationQuery" value="SELECT 1" />
	</bean>
	
	<bean id="slaveDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${database.driverClassName}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
		<property name="maxActive" value="50" />
		<property name="maxIdle" value="50" />
		
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="1800000" />
		<property name="numTestsPerEvictionRun" value="3" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<property name="validationQuery" value="SELECT 1" />
	</bean>
	
	<bean id="transactionManager" class="com.woodare.core.jpa.rws.MyJpaTransactionManager" >
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" >
		<property name="persistenceUnitName" value="persistenceUnit" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Jpa Entity Manager 配置
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">   
        <property name="dataSource" ref="dataSource"/>  
        <property name="jpaVendorAdapter">  
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">  
                <property name="showSql" value="false" />  
                <property name="generateDdl" value="true" />  
                <property name="database" value="MYSQL" />  
            </bean>  
        </property>  
        <property name="packagesToScan" value="com.lee"/>  
        <property name="jpaProperties">  
            <props>  
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>  
            </props>  
        </property>  
    </bean> -->  
</beans>
