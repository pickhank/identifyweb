<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<!-- Scans the classpath of this application for @Components to deploy as 
		beans -->
	<context:annotation-config />
	
	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->    
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >  
		<property name="messageConverters">   
			<list>
				<bean class = "org.springframework.http.converter.StringHttpMessageConverter">   
					<property name = "supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>

	<context:component-scan base-package="com.woodare.core.web" />
	<context:component-scan base-package="com.woodare.template.web" />

	<!-- Configures the @Controller programming model -->
    <mvc:annotation-driven> 
	<mvc:message-converters>   
       <bean class="org.springframework.http.converter.StringHttpMessageConverter">  
            <property name="supportedMediaTypes">   
               <list>   
                   <value>text/plain;charset=UTF-8</value>   
                   <value>text/html;charset=UTF-8</value>   
               </list>   
           </property>   
       </bean>    
    </mvc:message-converters>   
	</mvc:annotation-driven> 

	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Forwards requests to the "/" resource to the "welcome" view -->
	<!-- <mvc:view-controller path="/index" view-name="/index" />
	<mvc:view-controller path="/index.html" view-name="/index" /> -->
	 
	<!-- Configures Handler Interceptors -->
	<mvc:interceptors>
		<!-- Changes the locale when a 'locale' request parameter is sent; e.g.  /?locale=de -->
		<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="lang" />
		</bean>
	</mvc:interceptors>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/uploads/**" location="/uploads/" />

	<!-- Saves a locale change using a cookie -->
	<!-- <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"> 
		<property name="interceptors"> <ref bean="localeChangeInterceptor" /> </property> 
		</bean> -->

	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
		<property name="defaultLocale" value="zh" />
	</bean>

	<!-- Application Message Bundle -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:messages/messages" />
		<property name="cacheSeconds" value="0" />
	</bean>

	<!-- Helper class to configure Tiles 2.x for the Spring Framework -->
	<!-- See http://static.springsource.org/spring/docs/3.0.x/javadoc-api/org/springframework/web/servlet/view/tiles2/TilesConfigurer.html -->
	<!-- The actual tiles templates are in the tiles-definitions.xml -->
	<!-- View resolvers can also be configured with ResourceBundles or XML files. 
		If you need different view resolving based on Locale, you have to use the 
		resource bundle resolver. -->
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="tilesViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
	</bean>
	
    <bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" id="tilesConfigurer">
    <property name="definitions">
      <list>
        <value>/WEB-INF/layouts/layouts.xml</value>
        <!-- Scan views directory for Tiles configurations -->
        <value>/WEB-INF/views/**/views.xml</value>
      </list>
    </property>
  </bean>

	<!-- Configure the multipart resolver -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in 10M -->
		<property name="maxUploadSize" value="50000000" />
	</bean>
</beans>